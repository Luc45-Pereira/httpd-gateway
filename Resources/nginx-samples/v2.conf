# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# Apply fix for very long server names
server_names_hash_bucket_size 128;
# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
# Set appropriate X-Forwarded-Ssl header based on $proxy_x_forwarded_proto
map $proxy_x_forwarded_proto $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent" '
                 '"$upstream_addr"';
access_log off;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
		ssl_prefer_server_ciphers off;
resolver 127.0.0.11;
# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	server_tokens off;
	listen 80;
	access_log /var/log/nginx/access.log vhost;
	return 503;
}
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	server_tokens off;
	listen 443 ssl http2;
	access_log /var/log/nginx/access.log vhost;
	return 503;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/default.crt;
	ssl_certificate_key /etc/nginx/certs/default.key;
}
# .place
upstream .place-upstream {
	# Cannot connect to network 'backendNetwork' of this container
	## Can be connected with "frontendNetwork" network
	# Exposed ports: [{   80  tcp }]
	# Default virtual port: 80
	# VIRTUAL_PORT: 80
	# traefik
	server 172.27.0.4:80;
	# Fallback entry
	server 127.0.0.1 down;
}
server {
	server_name .place;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://.place-upstream;
	}
}
server {
	server_name .place;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	return 500;
	ssl_certificate /etc/nginx/certs/default.crt;
	ssl_certificate_key /etc/nginx/certs/default.key;
}
# foo.somedomain.tld
upstream foo.somedomain.tld-upstream {
	# Cannot connect to network 'backendNetwork' of this container
	## Can be connected with "frontendNetwork" network
	# Exposed ports: [{   8080  tcp }]
	# Default virtual port: 8080
	# VIRTUAL_PORT: 8080
	# other-upstream-instance
	server 172.27.0.8:8080;
	# Fallback entry
	server 127.0.0.1 down;
}
server {
	server_name foo.somedomain.tld;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/foo.somedomain.tld.crt;
	ssl_certificate_key /etc/nginx/certs/foo.somedomain.tld.key;
	ssl_dhparam /etc/nginx/certs/foo.somedomain.tld.dhparam.pem;
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/nginx/certs/foo.somedomain.tld.chain.pem;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://foo.somedomain.tld-upstream;
	}
}
server {
	server_name foo.somedomain.tld;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://foo.somedomain.tld-upstream;
	}
}
# bar.somedomain.tld
upstream bar.somedomain.tld-upstream {
	## Can be connected with "frontendNetwork" network
	# Exposed ports: [{   8000  tcp }]
	# Default virtual port: 8000
	# VIRTUAL_PORT: 8000
	# whoami-ssl-public
	server 172.27.0.5:8000;
	# Fallback entry
	server 127.0.0.1 down;
}
server {
	server_name bar.somedomain.tld;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/bar.somedomain.tld.crt;
	ssl_certificate_key /etc/nginx/certs/bar.somedomain.tld.key;
	ssl_dhparam /etc/nginx/certs/bar.somedomain.tld.dhparam.pem;
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/nginx/certs/bar.somedomain.tld.chain.pem;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://bar.somedomain.tld-upstream;
	}
}
server {
	server_name bar.somedomain.tld;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://bar.somedomain.tld-upstream;
	}
}
# zeta.somedomain.tld
upstream zeta.somedomain.tld-upstream {
	# Cannot connect to network 'backendNetwork' of this container
	## Can be connected with "frontendNetwork" network
	# Exposed ports: [{   80  tcp }]
	# Default virtual port: 80
	# VIRTUAL_PORT: 80
	# upstream-name-of-container
	server 172.27.0.7:80;
	# Fallback entry
	server 127.0.0.1 down;
}
server {
	server_name zeta.somedomain.tld;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/zeta.somedomain.tld.crt;
	ssl_certificate_key /etc/nginx/certs/zeta.somedomain.tld.key;
	ssl_dhparam /etc/nginx/certs/zeta.somedomain.tld.dhparam.pem;
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/nginx/certs/zeta.somedomain.tld.chain.pem;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://zeta.somedomain.tld-upstream;
	}
}
server {
	server_name zeta.somedomain.tld;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://zeta.somedomain.tld-upstream;
	}
}
# delta.somedomain.tld
upstream delta.somedomain.tld-upstream {
	# Cannot connect to network 'backendNetwork' of this container
	## Can be connected with "frontendNetwork" network
	# Exposed ports: [{   80  tcp }]
	# Default virtual port: 80
	# VIRTUAL_PORT: 80
	# upstream-name-of-container-feed
	server 172.27.0.6:80;
	# Fallback entry
	server 127.0.0.1 down;
}
server {
	server_name delta.somedomain.tld;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/delta.somedomain.tld.crt;
	ssl_certificate_key /etc/nginx/certs/delta.somedomain.tld.key;
	ssl_dhparam /etc/nginx/certs/delta.somedomain.tld.dhparam.pem;
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/nginx/certs/delta.somedomain.tld.chain.pem;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://delta.somedomain.tld-upstream;
	}
}
server {
	server_name delta.somedomain.tld;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	include /etc/nginx/vhost.d/default;
	location / {
		proxy_pass http://delta.somedomain.tld-upstream;
	}
}