version: '3.3'
services:
  nginx-proxy:
    container_name: nginx-proxy
    image: httpd-gateway
    build:
      context: ./images/nginx-proxy/
    logging:
      options:
        max-size: ${CONTAINER_DEFAULT_MAX_SIZE}
        max-file: ${CONTAINER_DEFAULT_MAX_FILE}
    env_file:
      - .env
      - .env.local
    environment:
      - HTTPS_METHOD=noredirect
    ports:
      - '${HOST_PORT_HTTP:-80}:80'
      - '${HOST_PORT_HTTPS:-443}:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - $PWD/nginx/certs:/etc/nginx/certs:ro
      - $PWD/nginx/vhost.d:/etc/nginx/vhost.d
      - $PWD/nginx/html:/usr/share/nginx/html
  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $PWD/nginx/certs:/etc/nginx/certs:rw
      - $PWD/nginx/vhost.d:/etc/nginx/vhost.d
      - $PWD/nginx/html:/usr/share/nginx/html
    env_file:
      - .env
      - .env.local
    logging:
      options:
        max-size: ${CONTAINER_DEFAULT_MAX_SIZE}
        max-file: ${CONTAINER_DEFAULT_MAX_FILE}
  traefik:
    image: traefik:${TRAEFIK_IMAGE_VERSION}
    hostname: traefik
    container_name: traefik
    logging:
        options:
            max-size: ${CONTAINER_DEFAULT_MAX_SIZE}
            max-file: ${CONTAINER_DEFAULT_MAX_FILE}
    restart: always
    command: --docker
    env_file:
        - .env
        - .env.local
    environment:
      - LETSENCRYPT_HOST=${TRAEFIK_VIRTUAL_HOST}
      - VIRTUAL_HOST=${TRAEFIK_VIRTUAL_HOST},*.docker.local,*.place
      - VIRTUAL_PORT=80
    expose:
        - "80"
    networks:
        - backend
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - traefik-certs:/etc/traefik/ssl/
        - ${PWD}/config/traefik.toml:/etc/traefik/traefik.toml
        - '/etc/localtime:/etc/localtime'
volumes:
    traefik-certs:
        external: true
networks:
  default:
      external:
          name: ${NETWORK_GATEWAY_NAME}
  backend:
      external:
          name: ${NETWORK_BACKEND_NAME}