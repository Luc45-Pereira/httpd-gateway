version: '3.9'
services:
  nginx-proxy:
    extends:
      file: service-nginx-proxy.yaml
      service: serviceNginxProxy
    networks:
      - default
  whoami-public:
    extends:
      file: service-whoami.yaml
      service: serviceWhoami
    profiles:
      - "testProfile"
      - "clientProfile"
    container_name: whoami-public
    networks:
      - default  
    environment:
      - VIRTUAL_HOST=whoami.local
  whoami-ssl-public:
    extends:
      file: service-whoami.yaml
      service: serviceWhoami
    profiles:
      - "frontendProfile"
      - "clientProfile"
    container_name: whoami-ssl-public      
    networks:
      - default  
    environment:
      - VIRTUAL_HOST=${SERVER_DEFAULT_HOST}
      - LETSENCRYPT_HOST=${SERVER_DEFAULT_HOST}
      # - DEBUG=true
  acme-companion:
    extends:
      file: service-acme-companion.yaml
      service: serviceAcmeCompanion
    networks:
      - default
    profiles:  
      - "frontendProfile"
      - "mainProfile"
  traefik:
    extends:
      file: service-traefik.yaml
      service: serviceTraefik
    container_name: traefik
    profiles:
      - "proxyProfile"
      - "mainProfile"
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=*.place
    networks:
      - default
      - backend
  whoami-backend:
    image: traefik/whoami
    container_name: whoami-backend
    profiles:
      - "proxyProfile"
      - "clientProfile"
    labels: #See https://doc.traefik.io/traefik/v1.7/configuration/backends/docker/
      - "traefik.frontend.rule=Host:whoami-backend.place"
      - "traefik.enable=true"
      - "traefik.tags=test,whoami"
    networks:  
      - backend
volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:
networks:
  default:
    external:
      name: ${NETWORK_GATEWAY_NAME:-frontendNetwork}
  backend:
    external:
      name: ${NETWORK_BACKEND_NAME:-backendNetwork}